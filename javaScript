//1 //8ku //Basic Mathematical Operations

function basicOp(Op,val1,val2) {
  switch (Op) {
    case '+':
      return val1 + val2;
    break;
 
    case '-':
      return val1 - val2;
    break;
 
    case '*':
      return val1 * val2;
    break;
    
    case '/':
      return val1 / val2;
    break;
    
    default:
      return 'default';
    break;
  }
}

//2 //8kyu //Beginner - Reduce but Grow

function grow(array1){ 
 function mulofArray(prev, next) { 
            return prev * next; 
            //prev = 1;
            //next = 2;
            //prev = prev * next; //2
            //next = 3
            //prev = prev * next; //6
            //next = 4
            //prev * next = 24;
        } 
  var dosmth = array1.reduce(mulofArray);
  return dosmth;
}

//2nd Solution

// const is a also a function but cannot be reassigned
const functionName = (parameter) => 
// => same as return 
// basiclly this is a function inside a function
parameter.reduce(/* this is a parameter -> */(prev, next) /* return this -> */ => prev * next);

//3 //7kyu //Ones and Zeros

const binaryArrayToNumber = arr => {
  // .toString default is convert to base 10
  var test = parseInt(arr.join(''), 2).toString(10);
  return test;
};

//4 //7kyu //Binary Additon

function addBinary(a,b) {
  c = a + b;
  return parseInt(c, 10).toString(2);
}
